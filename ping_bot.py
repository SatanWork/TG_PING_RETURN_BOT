import os
import json
import gspread
import telegram
import time
from datetime import datetime
from oauth2client.service_account import ServiceAccountCredentials
from telegram.ext import Updater, CommandHandler

# ==== –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ====
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
GOOGLE_CREDENTIALS = os.getenv("GOOGLE_CREDENTIALS")
SPREADSHEET_ID = "1DpbYJ5f6zdhIl1zDtn6Z3aCHZRDFTaqhsCrkzNM9Iqo"
CHECK_INTERVAL = 60  # –∏–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
chat_ids = set()  # –°—é–¥–∞ –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω—è—Ç—å—Å—è chat_id –≤—Å–µ—Ö, –∫—Ç–æ –ø–∏—Å–∞–ª –±–æ—Ç—É

# ==== –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets ====
creds_dict = json.loads(GOOGLE_CREDENTIALS)
creds = ServiceAccountCredentials.from_json_keyfile_dict(creds_dict, [
    "https://spreadsheets.google.com/feeds",
    "https://www.googleapis.com/auth/drive"
])
client = gspread.authorize(creds)
sheet = client.open_by_key(SPREADSHEET_ID).worksheet("Changes Log")

# ==== Telegram –±–æ—Ç—ã ====
bot = telegram.Bot(token=TELEGRAM_TOKEN)

def start(update, context):
    chat_id = update.effective_chat.id
    chat_ids.add(chat_id)
    context.bot.send_message(chat_id=chat_id, text="–í—ã –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≤–æ–∑–≤—Ä–∞—â—ë–Ω–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è—Ö.")

# ==== –•—Ä–∞–Ω–∏–ª–∏—â–µ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π ====
notified = set()

# ==== –ü—Ä–æ–≤–µ—Ä–∫–∞ Google Sheets ====
def check_for_updates():
    try:
        data = sheet.get_all_values()[1:]  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
        for row in data:
            if len(row) >= 4:
                date, change_type, app_number, package = row
                if change_type == "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤–µ—Ä–Ω—É–ª–æ—Å—å –≤ —Å—Ç–æ—Ä":
                    key = f"{date}|{app_number}|{package}"
                    if key not in notified:
                        notified.add(key)
                        send_notification(app_number, package)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–∞–±–ª–∏—Ü—ã: {e}")

# ==== –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è ====
def send_notification(app_number, package_name):
    message = f"üîî <b>{app_number}</b> –≤–µ—Ä–Ω—É–ª–æ—Å—å –≤ —Å—Ç–æ—Ä!\nhttps://play.google.com/store/apps/details?id={package_name}"
    for chat_id in chat_ids:
        try:
            bot.send_message(chat_id=chat_id, text=message, parse_mode=telegram.ParseMode.HTML)
        except Exception as e:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç {chat_id}: {e}")

# ==== –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞ ====
def main():
    updater = Updater(TELEGRAM_TOKEN, use_context=True)
    dp = updater.dispatcher
    dp.add_handler(CommandHandler("start", start))

    updater.start_polling()

    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Å–ª–µ–¥–∏—Ç –∑–∞ —Ç–∞–±–ª–∏—Ü–µ–π.")
    while True:
        check_for_updates()
        time.sleep(CHECK_INTERVAL)

if __name__ == "__main__":
    main()
